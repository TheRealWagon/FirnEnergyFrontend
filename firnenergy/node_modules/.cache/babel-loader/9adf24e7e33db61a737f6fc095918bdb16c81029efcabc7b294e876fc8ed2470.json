{"ast":null,"code":"import { useEffect } from 'react';\nimport { usePython } from 'react-py';\nimport axios from 'axios';\nconst baseURL = \"https://authentication.eniris.be/\";\nconst Authenticate = () => {\n  const login = async (username, password) => {\n    console.log(\"Login Attempt\");\n    let data = JSON.stringify({\n      \"username\": username,\n      \"password\": password\n    });\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'https://authentication.eniris.be/auth/login',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    try {\n      const response = await axios.post(config.url, data, config);\n      return response.data; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  const logout = async token => {\n    console.log(\"Logout Attempt\");\n    let data = '';\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'https://authentication.eniris.be/auth/logout',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      data: data\n    };\n    try {\n      const response = await axios.post(config.url, data, config);\n      return response.data; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  const Accesstoken = async token => {\n    console.log(\"AccessToken Retrieve\");\n    let data = '';\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: 'https://authentication.eniris.be/auth/accesstoken',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      data: data\n    };\n    try {\n      const response = await axios(config);\n      return response.data; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  const Devices = async accessToken => {\n    console.log(\"Devices Retrieve\");\n    let data = JSON.stringify([{}]);\n\n    //   const corsProxy = 'https://cors-anywhere.herokuapp.com/';\n\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: 'https://api.eniris.be/v1/device?id=137206',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}`\n      },\n      data: data\n    };\n    try {\n      const response = await axios.get(config.url, config);\n      return response; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  return {\n    login,\n    logout,\n    Accesstoken,\n    Devices\n  };\n};\n_c = Authenticate;\nexport default Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["useEffect","usePython","axios","baseURL","Authenticate","login","username","password","console","log","data","JSON","stringify","config","method","maxBodyLength","Infinity","url","headers","response","post","error","logout","token","Accesstoken","Devices","accessToken","get","_c","$RefreshReg$"],"sources":["C:/Users/Dirk Verdoodt/Documents/eniris data/react website/firnenergy/src/api/authenticate.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { usePython } from 'react-py'\r\nimport axios from 'axios';\r\n\r\nconst baseURL = \"https://authentication.eniris.be/\";\r\n\r\nconst Authenticate = () => {\r\n\r\n    const login = async (username, password) => {    \r\n        console.log(\"Login Attempt\")\r\n        let data = JSON.stringify({\r\n            \"username\": username,\r\n            \"password\": password\r\n        });\r\n\r\n        let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://authentication.eniris.be/auth/login',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(config.url, data, config);\r\n            return response.data; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    const logout = async (token) => {    \r\n        console.log(\"Logout Attempt\")\r\n        let data = '';\r\n\r\n        let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://authentication.eniris.be/auth/logout',\r\n        headers: { \r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(config.url, data, config);\r\n            return response.data; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    const Accesstoken = async (token) => {    \r\n        console.log(\"AccessToken Retrieve\")\r\n        let data = '';\r\n\r\n        let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://authentication.eniris.be/auth/accesstoken',\r\n        headers: { \r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n            const response = await axios(config);\r\n            return response.data; // Return the data after successful response\r\n          } catch (error) {\r\n            console.log(error);\r\n            // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n          }\r\n\r\n    }\r\n\r\n    const Devices = async (accessToken) => {    \r\n        console.log(\"Devices Retrieve\")\r\n        let data = JSON.stringify([\r\n            {\r\n              \r\n            }\r\n          ]);\r\n          \r\n        //   const corsProxy = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n          let config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: 'https://api.eniris.be/v1/device?id=137206',\r\n            headers: { \r\n              'Content-Type': 'application/json', \r\n              'Authorization': `Bearer ${accessToken}`,\r\n            },\r\n            data : data\r\n          };\r\n          \r\n          try {\r\n            const response = await axios.get(config.url, config);\r\n            return response; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        login,\r\n        logout,\r\n        Accesstoken,\r\n        Devices,\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Authenticate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}