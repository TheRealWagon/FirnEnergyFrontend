{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dirk Verdoodt\\\\Documents\\\\eniris data\\\\react website\\\\firnenergy\\\\src\\\\components\\\\body\\\\admin\\\\users\\\\usersList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport User from '../../../../api/user';\nimport { useNavigate } from 'react-router-dom';\nimport UserDisplay from './userDisplay';\nimport './usersList.css';\nimport Authenticate from '../../../../api/authenticate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [reloadUserList, setReloadUserList] = useState(false);\n  const userApi = User();\n  const navigate = useNavigate();\n  useEffect(() => {\n    setReloadUserList(false);\n    const ConfirmUserRole = async () => {\n      const token = localStorage.getItem('jwtToken');\n      try {\n        const user = await userApi.GetUsername(token);\n        if (user.data.user.role != 'ADMIN') {\n          throw Error;\n        }\n\n        //get the users\n        const users = await userApi.GetUserData(token);\n        setUsers(users.data);\n      } catch (error) {\n        //token expired or invalid navigate to Login\n        localStorage.removeItem('jwtToken');\n        navigate('/');\n      }\n    };\n    ConfirmUserRole();\n  }, [reloadUserList]);\n  const RefreshUserListPage = () => {\n    setReloadUserList(true);\n  };\n  const [data, setData] = useState([]);\n  const AuthApi = Authenticate();\n  useEffect(() => {\n    const retrievedata = async () => {\n      const dete = await AuthApi.Devices();\n      setData(dete);\n    };\n    retrievedata();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className=\"UserList-Container\">\n    //     {users.map((user, index) => (\n    //         <div key={index} className=\"UserSet\">\n    //         <UserDisplay\n    //             email={user.email}\n    //             password={user.password}\n    //             deviceId={user.deviceid}\n    //             enirisEmail={user.enirisEmail}\n    //             enirisPassword={user.enirisPassword}\n    //             RefreshUserListPage={RefreshUserListPage}\n    //         />\n    //         </div>\n    //     ))}\n    // </div>\n    _jsxDEV(\"div\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(UsersList, \"pqOHSg5cNGooLKAsRFNipHnrgng=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["useEffect","useState","User","useNavigate","UserDisplay","Authenticate","jsxDEV","_jsxDEV","UsersList","_s","users","setUsers","reloadUserList","setReloadUserList","userApi","navigate","ConfirmUserRole","token","localStorage","getItem","user","GetUsername","data","role","Error","GetUserData","error","removeItem","RefreshUserListPage","setData","AuthApi","retrievedata","dete","Devices","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dirk Verdoodt/Documents/eniris data/react website/firnenergy/src/components/body/admin/users/usersList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport User from '../../../../api/user';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserDisplay from './userDisplay';\r\nimport './usersList.css'\r\n\r\nimport Authenticate from '../../../../api/authenticate'\r\n\r\nconst UsersList = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [reloadUserList, setReloadUserList] = useState(false);\r\n\r\n    const userApi = User();\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n\r\n        setReloadUserList(false)\r\n\r\n        const ConfirmUserRole = async () => {\r\n            const token = localStorage.getItem('jwtToken');\r\n            try {\r\n                const user = await userApi.GetUsername(token);\r\n\r\n                if (user.data.user.role != 'ADMIN') {\r\n                    throw Error;\r\n                }\r\n\r\n                //get the users\r\n                const users = await userApi.GetUserData(token);\r\n                setUsers(users.data);\r\n\r\n            } catch (error) {\r\n                //token expired or invalid navigate to Login\r\n                localStorage.removeItem('jwtToken');\r\n                navigate('/');\r\n            }\r\n        }\r\n        ConfirmUserRole();\r\n        \r\n    }, [reloadUserList]);\r\n\r\n    const RefreshUserListPage = () => {\r\n        setReloadUserList(true);\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    const AuthApi = Authenticate();\r\n\r\n    useEffect(() => {\r\n        \r\n        const retrievedata = async() => {\r\n            const dete = await AuthApi.Devices();\r\n            setData(dete);\r\n        }\r\n        retrievedata();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        // <div className=\"UserList-Container\">\r\n        //     {users.map((user, index) => (\r\n        //         <div key={index} className=\"UserSet\">\r\n        //         <UserDisplay\r\n        //             email={user.email}\r\n        //             password={user.password}\r\n        //             deviceId={user.deviceid}\r\n        //             enirisEmail={user.enirisEmail}\r\n        //             enirisPassword={user.enirisPassword}\r\n        //             RefreshUserListPage={RefreshUserListPage}\r\n        //         />\r\n        //         </div>\r\n        //     ))}\r\n        // </div>\r\n        <div>\r\n            {data}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UsersList;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,iBAAiB;AAExB,OAAOC,YAAY,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMa,OAAO,GAAGZ,IAAI,CAAC,CAAC;EACtB,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IAEZa,iBAAiB,CAAC,KAAK,CAAC;IAExB,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC9C,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,WAAW,CAACJ,KAAK,CAAC;QAE7C,IAAIG,IAAI,CAACE,IAAI,CAACF,IAAI,CAACG,IAAI,IAAI,OAAO,EAAE;UAChC,MAAMC,KAAK;QACf;;QAEA;QACA,MAAMd,KAAK,GAAG,MAAMI,OAAO,CAACW,WAAW,CAACR,KAAK,CAAC;QAC9CN,QAAQ,CAACD,KAAK,CAACY,IAAI,CAAC;MAExB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZ;QACAR,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;QACnCZ,QAAQ,CAAC,GAAG,CAAC;MACjB;IACJ,CAAC;IACDC,eAAe,CAAC,CAAC;EAErB,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMgB,mBAAmB,GAAGA,CAAA,KAAM;IAC9Bf,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM,CAACS,IAAI,EAAEO,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM6B,OAAO,GAAGzB,YAAY,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IAEZ,MAAM+B,YAAY,GAAG,MAAAA,CAAA,KAAW;MAC5B,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,OAAO,CAAC,CAAC;MACpCJ,OAAO,CAACG,IAAI,CAAC;IACjB,CAAC;IACDD,YAAY,CAAC,CAAC;EAElB,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAxB,OAAA;MAAA2B,QAAA,EACKZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;AAGd,CAAC;AAAA7B,EAAA,CAxEKD,SAAS;EAAA,QAMML,WAAW;AAAA;AAAAoC,EAAA,GAN1B/B,SAAS;AA0Ef,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}