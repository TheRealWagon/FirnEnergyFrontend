{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dirk Verdoodt\\\\Documents\\\\eniris data\\\\react website\\\\firnenergy\\\\src\\\\components\\\\body\\\\charts\\\\charts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './charts.css';\nimport { ResponsiveContainer, AreaChart, BarChart, Legend, Bar, XAxis, YAxis, Area, Tooltip, CartesianGrid, ReferenceDot } from \"recharts\";\nimport './charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Charts = _ref => {\n  _s();\n  let {\n    Data,\n    darkMode,\n    requestBarChartData,\n    ToggleLoading\n  } = _ref;\n  const [data, setData] = useState();\n  const [showSolarProd, setShowSolarProd] = useState(true);\n  const [showConsumption, setShowConsumption] = useState(true);\n  const [showImportFromGrid, setShowImportFromGrid] = useState(true);\n  const [showConsumedFromPv, setShowConsumedFromPv] = useState(true);\n  const [axisColors, setAxisColors] = useState(\"black\");\n  const [toolTipStyle, setToolTipStyle] = useState(\"black\");\n  const [legendStyle, setLegendStyle] = useState();\n  const [activeHeader, setActiveHeader] = useState(\"ConsumptionProduction\");\n  const [ConsumptionProductionHeaderStyle, setConsumptionProductionHeaderStyle] = useState(true);\n  const [BatteryStyle, setBatteryStyle] = useState(false);\n  const [RevenueStyle, setRevenueStyle] = useState(false);\n  const [dayStyle, setDayStyle] = useState(true);\n  const [monthStyle, setMonthStyle] = useState(false);\n  const [yearStyle, setYearStyle] = useState(false);\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  const [actualDate, setActualDate] = useState(new Date());\n  const [allowRightArrow, setAllowRightArrow] = useState(false);\n  const arr = {\n    \"SolarProd\": setShowSolarProd,\n    \"Consumed\": setShowConsumption,\n    \"Import\": setShowImportFromGrid,\n    \"FromPv\": setShowConsumedFromPv\n  };\n\n  //Updates the data if changed\n  useEffect(() => {\n    setData(Data);\n  }, [Data]);\n\n  //hides the bar by clicking on the legend\n  const ShowOrHideData = val => {\n    const methode = arr[val['payload'].id];\n    methode(val.inactive);\n  };\n\n  //checks for darkmode\n  useEffect(() => {\n    darkMode ? setAxisColors(\"white\") : setAxisColors(\"black\");\n    darkMode ? setToolTipStyle({\n      borderRadius: \"25px\",\n      color: \"white\",\n      backgroundColor: \"#181A18\",\n      border: \"solid white 1px\"\n    }) : setToolTipStyle({\n      borderRadius: \"25px\"\n    });\n\n    // darkMode ? setLegendStyle({color: \"white\"}) : setLegendStyle({color: \"black\"});\n  }, [darkMode]);\n\n  //checks for darkmode and applies styles\n  const LegendStyle = entry => {\n    if (entry.inactive) {\n      if (darkMode) {\n        return {\n          color: \"white\",\n          opacity: \"0.5\"\n        };\n      } else {\n        return {\n          color: \"black\",\n          opacity: \"0.5\"\n        };\n      }\n    } else {\n      if (darkMode) {\n        return {\n          color: \"white\"\n        };\n      } else {\n        return {\n          color: \"black\"\n        };\n      }\n    }\n  };\n\n  //this is the tooltip constructor\n  const CustomConsumptionToolTip = _ref2 => {\n    let {\n      active,\n      payload,\n      label\n    } = _ref2;\n    const colors = {\n      \"SolarProd\": [\"#ff8057\", \"#ffd17f\"],\n      \"Consumed\": [\"#c069e4\", \"#6c32fb\"],\n      \"Import\": [\"#f46286\", \"#ec2871\"],\n      \"FromPv\": [\"#06d3ba\", \"#189cd8\"],\n      \"BatteryPercent\": [\"#8ad7b2\", \"#22df83\"],\n      \"FedToGrid\": [\"#06d3ba\", \"#189cd8\"],\n      \"FirnControllerProfit\": [\"#020024\", \"#090979\"]\n    };\n    const parentStyle = darkMode ? {\n      borderRadius: \"25px\",\n      color: \"white\",\n      backgroundColor: \"#181A18\",\n      border: \"solid white 2px\",\n      padding: \"5px 10px 15px 15px\"\n    } : {\n      background: \"white\",\n      borderRadius: \"25px\",\n      padding: \"5px 10px 15px 15px\",\n      border: \"black solid 2px\"\n    };\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: parentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), payload.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"3px 0px\",\n            display: \"flex\",\n            flexFlow: \"row nowrap\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"15px\",\n              height: \"15px\",\n              marginLeft: \"-5px\",\n              marginRight: \"5px\",\n              borderRadius: \"50%\",\n              background: `linear-gradient(0deg, ${colors[item.id][0]}, ${colors[item.id][1]})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 140\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '165px'\n            },\n            children: [item.dataKey, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 335\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 386\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 409\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 44\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  useEffect(() => {\n    if (dayStyle) {\n      setDate(new Date().toISOString().split('T')[0]);\n      setActualDate(new Date());\n    } else if (monthStyle) {\n      const newDate = new Date().toISOString().split('T')[0].split(\"-\");\n      setDate(`${newDate[0]}-${newDate[1]}`);\n      setActualDate(new Date());\n    } else {\n      const newDate = new Date().toISOString().split('T')[0].split(\"-\");\n      setDate(`${newDate[0]}`);\n      setActualDate(new Date());\n    }\n  }, [dayStyle, monthStyle, yearStyle]);\n\n  //see which header is active and activate the correct graph and request correct data\n  const ConsumptionProductionClick = async () => {\n    ToggleLoading(true);\n    setConsumptionProductionHeaderStyle(true);\n    setBatteryStyle(false);\n    setRevenueStyle(false);\n\n    //request consumptiondata\n    await requestBarChartData(\"BarChartConsumptionData\");\n    ToggleLoading(false);\n  };\n  const BatteryClick = async () => {\n    ToggleLoading(true);\n    setConsumptionProductionHeaderStyle(false);\n    setBatteryStyle(true);\n    setRevenueStyle(false);\n\n    //request battery data\n    await requestBarChartData(\"BarChartBatteryData\");\n    ToggleLoading(false);\n  };\n  const RevenueClick = async () => {\n    ToggleLoading(true);\n    setConsumptionProductionHeaderStyle(false);\n    setBatteryStyle(false);\n    setRevenueStyle(true);\n\n    //request revenue data\n    await requestBarChartData(\"BarChartRevenueData\");\n    ToggleLoading(false);\n  };\n  const DayClick = () => {\n    ToggleLoading(true);\n    setDayStyle(true);\n    setMonthStyle(false);\n    setYearStyle(false);\n\n    //request data for day actualdate\n\n    ToggleLoading(false);\n  };\n  const MonthClick = () => {\n    ToggleLoading(true);\n    setDayStyle(false);\n    setMonthStyle(true);\n    setYearStyle(false);\n\n    //request data per day actualdate\n\n    ToggleLoading(false);\n  };\n  const YearClick = () => {\n    ToggleLoading(true);\n    setDayStyle(false);\n    setMonthStyle(false);\n    setYearStyle(true);\n\n    //request data per month actualdate\n\n    ToggleLoading(false);\n  };\n  const HandleBeforeClick = () => {\n    if (dayStyle) {\n      let newDate = actualDate;\n      newDate.setDate(newDate.getDate() - 1);\n      setDate(newDate.toISOString().split('T')[0]);\n      setActualDate(newDate);\n      setAllowRightArrow(true);\n\n      //request data\n    } else if (monthStyle) {\n      let newDate = actualDate;\n      newDate.setMonth(newDate.getMonth() - 1);\n      const tempDate = newDate.toISOString().split('T')[0].split(\"-\");\n      setDate(`${tempDate[0]}-${tempDate[1]}`);\n      setActualDate(newDate);\n      setAllowRightArrow(true);\n    } else {\n      let newDate = actualDate;\n      newDate.setFullYear(newDate.getFullYear() - 1);\n      const tempDate = newDate.toISOString().split('T')[0].split(\"-\");\n      setDate(`${tempDate[0]}`);\n      setActualDate(newDate);\n      setAllowRightArrow(true);\n    }\n  };\n  const HandleAfterClick = () => {\n    if (allowRightArrow) {\n      if (dayStyle) {\n        const todayDate = new Date();\n        let newDate = actualDate;\n        newDate.setDate(newDate.getDate() + 1);\n        setDate(newDate.toISOString().split('T')[0]);\n        setActualDate(newDate);\n        if (newDate.getDate() === todayDate.getDate() && newDate.getMonth() === todayDate.getMonth() && newDate.getFullYear() === todayDate.getFullYear()) {\n          setAllowRightArrow(false);\n        }\n      } else if (monthStyle) {\n        const todayDate = new Date();\n        let newDate = actualDate;\n        newDate.setMonth(newDate.getMonth() + 1);\n        const tempDate = newDate.toISOString().split('T')[0].split(\"-\");\n        setDate(`${tempDate[0]}-${tempDate[1]}`);\n        setActualDate(newDate);\n        if (newDate.getMonth() === todayDate.getMonth() && newDate.getFullYear() === todayDate.getFullYear()) {\n          setAllowRightArrow(false);\n        }\n      } else {\n        const todayDate = new Date();\n        let newDate = actualDate;\n        newDate.setFullYear(newDate.getFullYear() + 1);\n        const tempDate = newDate.toISOString().split('T')[0].split(\"-\");\n        setDate(`${tempDate[0]}`);\n        setActualDate(newDate);\n        if (newDate.getFullYear() === todayDate.getFullYear()) {\n          setAllowRightArrow(false);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Graph-Headers\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Graph-Title\",\n        onClick: ConsumptionProductionClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ConsumptionProductionHeaderStyle ? \"activeCons\" : \"inactiveCons\",\n          children: \"Consumption & Production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Graph-Title\",\n        onClick: BatteryClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: BatteryStyle ? \"activeBattery\" : \"inactiveBattery\",\n          children: \"Battery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Graph-Title\",\n        onClick: RevenueClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: RevenueStyle ? \"activeRevenue\" : \"inactiveRevenue\",\n          children: \"Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TimeFrame-Container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TimePeriodButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: DayClick,\n            style: dayStyle ? {\n              backgroundColor: \"#007dff\",\n              color: \"white\"\n            } : {},\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: MonthClick,\n            style: monthStyle ? {\n              backgroundColor: \"#007dff\",\n              color: \"white\"\n            } : {},\n            id: \"TimeFrame-Button-Middle\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 163\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: YearClick,\n            style: yearStyle ? {\n              backgroundColor: \"#007dff\",\n              color: \"white\"\n            } : {},\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 305\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TimeFrame-Time\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: HandleBeforeClick,\n            className: \"TimeFrame-Time-Arrow Time-Frame-Time-Arrow-Left\",\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"TimeFrame-Time-TimeDisplay\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 163\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: HandleAfterClick,\n            style: allowRightArrow ? {} : {\n              opacity: 0.5,\n              cursor: \"default\"\n            },\n            className: \"TimeFrame-Time-Arrow Time-Frame-Time-Arrow-Right\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 225\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), ConsumptionProductionHeaderStyle ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 730,\n        height: 250,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: [/*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `SolarProductionColor`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#ffd17f\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#ff8057\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `ConsumptionColor`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#c069e4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#6c32fb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `ImportFromGridColor`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#f46286\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#ec2871\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `ConsumedFromPV`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#06d3ba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#189cd8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"0 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          interval: 1,\n          dataKey: \"Name\",\n          stroke: axisColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          unit: \"kWh\",\n          scale: \"linear\",\n          tickFormatter: value => value.toFixed(0),\n          interval: 1,\n          stroke: axisColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: toolTipStyle,\n          isAnimationActive: true,\n          content: /*#__PURE__*/_jsxDEV(CustomConsumptionToolTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          onClick: value => ShowOrHideData(value),\n          formatter: (value, entry, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: LegendStyle(entry),\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 112\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"SolarProd\",\n          dataKey: \"Solar production\",\n          fill: `url(#SolarProductionColor)`,\n          legendType: \"circle\",\n          unit: \"kWh\",\n          hide: showSolarProd ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"Consumed\",\n          dataKey: \"Consumption\",\n          fill: `url(#ConsumptionColor)`,\n          legendType: \"circle\",\n          unit: \"kWh\",\n          hide: showConsumption ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"Import\",\n          dataKey: \"Import from grid\",\n          fill: `url(#ImportFromGridColor)`,\n          legendType: \"circle\",\n          unit: \"kWh\",\n          hide: showImportFromGrid ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"FromPv\",\n          dataKey: \"Consumed from PV\",\n          fill: `url(#ConsumedFromPV)`,\n          legendType: \"circle\",\n          unit: \"kWh\",\n          hide: showConsumedFromPv ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), BatteryStyle ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        width: 730,\n        height: 250,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"colorUv\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: \"#8ad7b2\",\n              stopOpacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: \"#22df83\",\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Name\",\n          stroke: axisColors,\n          tickFormatter: value => `${value.split(\":\")[0]}:00:00`,\n          interval: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: axisColors,\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomConsumptionToolTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          iconType: \"plainline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          id: \"BatteryPercent\",\n          type: \"monotone\",\n          dataKey: \"Battery percentage\",\n          stroke: \"#22df83\",\n          fillOpacity: 1,\n          unit: \"%\",\n          legendType: \"circle\",\n          fill: \"url(#colorUv)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), RevenueStyle ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 730,\n        height: 250,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: [/*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `FedToGridColor`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#06d3ba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#189cd8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: `FirnControllerProfitColor`,\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"100%\",\n            spreadMethod: \"reflect\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0\",\n              stopColor: \"#0e578b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"1\",\n              stopColor: \"#189cd8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Name\",\n          stroke: axisColors,\n          interval: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          unit: \"€\",\n          stroke: axisColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: toolTipStyle,\n          isAnimationActive: true,\n          content: /*#__PURE__*/_jsxDEV(CustomConsumptionToolTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          iconType: \"circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"FedToGrid\",\n          stackId: 'a',\n          unit: '€',\n          dataKey: \"Fed to grid\",\n          fill: `url(#FedToGridColor)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          id: \"FirnControllerProfit\",\n          stackId: 'a',\n          unit: '€',\n          dataKey: \"FirnController Profit\",\n          fill: `url(#FirnControllerProfitColor)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n\n// \n_s(Charts, \"kpw57jgsETrgF2TpdNCDA+J2Hng=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","ResponsiveContainer","AreaChart","BarChart","Legend","Bar","XAxis","YAxis","Area","Tooltip","CartesianGrid","ReferenceDot","jsxDEV","_jsxDEV","Fragment","_Fragment","Charts","_ref","_s","Data","darkMode","requestBarChartData","ToggleLoading","data","setData","showSolarProd","setShowSolarProd","showConsumption","setShowConsumption","showImportFromGrid","setShowImportFromGrid","showConsumedFromPv","setShowConsumedFromPv","axisColors","setAxisColors","toolTipStyle","setToolTipStyle","legendStyle","setLegendStyle","activeHeader","setActiveHeader","ConsumptionProductionHeaderStyle","setConsumptionProductionHeaderStyle","BatteryStyle","setBatteryStyle","RevenueStyle","setRevenueStyle","dayStyle","setDayStyle","monthStyle","setMonthStyle","yearStyle","setYearStyle","date","setDate","Date","toISOString","split","actualDate","setActualDate","allowRightArrow","setAllowRightArrow","arr","ShowOrHideData","val","methode","id","inactive","borderRadius","color","backgroundColor","border","LegendStyle","entry","opacity","CustomConsumptionToolTip","_ref2","active","payload","label","colors","parentStyle","padding","background","length","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","display","flexFlow","alignItems","width","height","marginLeft","marginRight","dataKey","value","unit","newDate","ConsumptionProductionClick","BatteryClick","RevenueClick","DayClick","MonthClick","YearClick","HandleBeforeClick","getDate","setMonth","getMonth","tempDate","setFullYear","getFullYear","HandleAfterClick","todayDate","className","onClick","cursor","x1","y1","x2","y2","spreadMethod","offset","stopColor","strokeDasharray","interval","stroke","scale","tickFormatter","toFixed","contentStyle","isAnimationActive","content","formatter","index","fill","legendType","hide","stopOpacity","iconType","type","fillOpacity","stackId","_c","$RefreshReg$"],"sources":["C:/Users/Dirk Verdoodt/Documents/eniris data/react website/firnenergy/src/components/body/charts/charts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './charts.css'\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    BarChart,\r\n    Legend,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    Area,\r\n    Tooltip,\r\n    CartesianGrid,\r\n    ReferenceDot,\r\n} from \"recharts\";\r\nimport './charts.css';\r\n\r\nconst Charts = ({Data, darkMode, requestBarChartData, ToggleLoading}) => {\r\n    const [data, setData] = useState();\r\n    const [showSolarProd, setShowSolarProd] = useState(true);\r\n    const [showConsumption, setShowConsumption] = useState(true);\r\n    const [showImportFromGrid, setShowImportFromGrid] = useState(true);\r\n    const [showConsumedFromPv, setShowConsumedFromPv] = useState(true);\r\n    const [axisColors, setAxisColors] = useState(\"black\");\r\n    const [toolTipStyle, setToolTipStyle] = useState(\"black\");\r\n    const [legendStyle, setLegendStyle] = useState();\r\n    const [activeHeader, setActiveHeader] = useState(\"ConsumptionProduction\");\r\n    const [ConsumptionProductionHeaderStyle, setConsumptionProductionHeaderStyle] = useState(true);\r\n    const [BatteryStyle, setBatteryStyle] = useState(false);\r\n    const [RevenueStyle, setRevenueStyle] = useState(false);\r\n    const [dayStyle, setDayStyle] = useState(true);\r\n    const [monthStyle, setMonthStyle] = useState(false);\r\n    const [yearStyle, setYearStyle] = useState(false);\r\n    const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\r\n    const [actualDate, setActualDate] = useState(new Date());\r\n    const [allowRightArrow, setAllowRightArrow] = useState(false);\r\n    const arr = {\"SolarProd\": setShowSolarProd, \"Consumed\": setShowConsumption, \"Import\": setShowImportFromGrid, \"FromPv\": setShowConsumedFromPv}\r\n\r\n    //Updates the data if changed\r\n    useEffect(() => {\r\n\r\n        setData(Data)\r\n\r\n    }, [Data])\r\n    \r\n    //hides the bar by clicking on the legend\r\n    const ShowOrHideData = (val) => {\r\n        const methode = arr[val['payload'].id]\r\n        methode(val.inactive);\r\n    }\r\n\r\n    //checks for darkmode\r\n    useEffect(() => {\r\n\r\n        darkMode ? setAxisColors(\"white\") : setAxisColors(\"black\");\r\n        darkMode ? setToolTipStyle({borderRadius: \"25px\", color: \"white\", backgroundColor: \"#181A18\", border: \"solid white 1px\"}) : setToolTipStyle({borderRadius: \"25px\"});\r\n\r\n        // darkMode ? setLegendStyle({color: \"white\"}) : setLegendStyle({color: \"black\"});\r\n\r\n    }, [darkMode]);\r\n\r\n    //checks for darkmode and applies styles\r\n    const LegendStyle = (entry) => {\r\n\r\n        if (entry.inactive) {   \r\n            if (darkMode) {\r\n                return({color: \"white\", opacity: \"0.5\"})\r\n            } else {\r\n                return({color: \"black\", opacity: \"0.5\"})\r\n            }\r\n        } else {\r\n            if (darkMode) {\r\n                return( {color: \"white\"});\r\n            } else {\r\n                return( {color: \"black\"});\r\n            }\r\n        }\r\n        \r\n    }   \r\n\r\n    //this is the tooltip constructor\r\n    const CustomConsumptionToolTip = ({ active, payload, label}) => {\r\n\r\n        const colors = {\"SolarProd\": [\"#ff8057\", \"#ffd17f\"], \"Consumed\": [\"#c069e4\", \"#6c32fb\"], \"Import\": [\"#f46286\", \"#ec2871\"], \"FromPv\": [\"#06d3ba\", \"#189cd8\"], \"BatteryPercent\": [\"#8ad7b2\", \"#22df83\"], \"FedToGrid\": [\"#06d3ba\", \"#189cd8\"], \"FirnControllerProfit\": [\"#020024\", \"#090979\"]}\r\n        const parentStyle = darkMode? {borderRadius: \"25px\", color: \"white\", backgroundColor: \"#181A18\", border: \"solid white 2px\", padding: \"5px 10px 15px 15px\"} : {background: \"white\", borderRadius: \"25px\", padding: \"5px 10px 15px 15px\", border: \"black solid 2px\"}\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <div style={parentStyle}>\r\n                    <p>{label}</p>\r\n                    {payload.map((item) => <div style={{padding: \"3px 0px\",display: \"flex\", flexFlow: \"row nowrap\", alignItems: \"center\"}}><div style={{width: \"15px\", height: \"15px\", marginLeft: \"-5px\", marginRight: \"5px\", borderRadius: \"50%\", background: `linear-gradient(0deg, ${colors[item.id][0]}, ${colors[item.id][1]})`}}></div><div style={{width: '165px'}}>{item.dataKey}:</div><div>{item.value}</div><div>{item.unit}</div></div>)}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (dayStyle) {\r\n            setDate(new Date().toISOString().split('T')[0]);\r\n            setActualDate(new Date());\r\n        } else if (monthStyle) {\r\n            const newDate = (new Date().toISOString().split('T')[0]).split(\"-\");\r\n            setDate(`${newDate[0]}-${newDate[1]}`);\r\n            setActualDate(new Date());\r\n        } else {\r\n            const newDate = (new Date().toISOString().split('T')[0]).split(\"-\");\r\n            setDate(`${newDate[0]}`);\r\n            setActualDate(new Date());\r\n        }\r\n\r\n    }, [dayStyle, monthStyle, yearStyle])\r\n\r\n\r\n    //see which header is active and activate the correct graph and request correct data\r\n    const ConsumptionProductionClick = async () => {\r\n        ToggleLoading(true)\r\n        setConsumptionProductionHeaderStyle(true)\r\n        setBatteryStyle(false)\r\n        setRevenueStyle(false)\r\n\r\n        //request consumptiondata\r\n        await requestBarChartData(\"BarChartConsumptionData\");\r\n        ToggleLoading(false)\r\n    }\r\n    const BatteryClick = async () => {\r\n        ToggleLoading(true)\r\n        setConsumptionProductionHeaderStyle(false)\r\n        setBatteryStyle(true)\r\n        setRevenueStyle(false)\r\n        \r\n        //request battery data\r\n        await requestBarChartData(\"BarChartBatteryData\");\r\n        ToggleLoading(false)\r\n    }\r\n    const RevenueClick = async () => {\r\n        ToggleLoading(true)\r\n        setConsumptionProductionHeaderStyle(false)\r\n        setBatteryStyle(false)\r\n        setRevenueStyle(true)\r\n\r\n        //request revenue data\r\n        await requestBarChartData(\"BarChartRevenueData\");\r\n        ToggleLoading(false)\r\n    }\r\n    const DayClick = () => {\r\n        ToggleLoading(true)\r\n\r\n        setDayStyle(true)\r\n        setMonthStyle(false)\r\n        setYearStyle(false)\r\n\r\n        //request data for day actualdate\r\n        \r\n\r\n\r\n        ToggleLoading(false)\r\n    }\r\n    const MonthClick = () => {\r\n        ToggleLoading(true)\r\n\r\n        setDayStyle(false)\r\n        setMonthStyle(true)\r\n        setYearStyle(false)\r\n\r\n\r\n        //request data per day actualdate\r\n\r\n        ToggleLoading(false)\r\n    }\r\n    const YearClick = () => {\r\n        ToggleLoading(true)\r\n\r\n        setDayStyle(false)\r\n        setMonthStyle(false)\r\n        setYearStyle(true)\r\n\r\n        //request data per month actualdate\r\n\r\n\r\n        ToggleLoading(false)\r\n    }\r\n    const HandleBeforeClick = () => {\r\n\r\n        if (dayStyle) {\r\n            let newDate = actualDate;\r\n            newDate.setDate(newDate.getDate() - 1);\r\n\r\n            setDate(newDate.toISOString().split('T')[0]);\r\n            setActualDate(newDate);\r\n            setAllowRightArrow(true);\r\n\r\n            //request data\r\n\r\n\r\n\r\n        } else if (monthStyle) {\r\n            let newDate = actualDate;\r\n            newDate.setMonth(newDate.getMonth() - 1);\r\n\r\n            const tempDate = (newDate.toISOString().split('T')[0]).split(\"-\");\r\n            setDate(`${tempDate[0]}-${tempDate[1]}`);\r\n            setActualDate(newDate);\r\n            setAllowRightArrow(true);\r\n        } else {\r\n            let newDate = actualDate;\r\n            newDate.setFullYear(newDate.getFullYear() - 1);\r\n\r\n            const tempDate = (newDate.toISOString().split('T')[0]).split(\"-\");\r\n            setDate(`${tempDate[0]}`);\r\n            setActualDate(newDate);\r\n            setAllowRightArrow(true);\r\n        }\r\n\r\n    }\r\n    const HandleAfterClick = () => {\r\n\r\n        if (allowRightArrow) {\r\n            if (dayStyle) {\r\n                const todayDate = new Date();\r\n                let newDate = actualDate;\r\n                newDate.setDate(newDate.getDate() + 1);\r\n    \r\n                setDate(newDate.toISOString().split('T')[0])\r\n                setActualDate(newDate);\r\n\r\n                if (newDate.getDate() === todayDate.getDate() && newDate.getMonth() === todayDate.getMonth() && newDate.getFullYear() === todayDate.getFullYear()) {\r\n                    setAllowRightArrow(false);\r\n                }\r\n            } else if (monthStyle) {\r\n                const todayDate = new Date();\r\n                let newDate = actualDate;\r\n                newDate.setMonth(newDate.getMonth() + 1);\r\n    \r\n                const tempDate = (newDate.toISOString().split('T')[0]).split(\"-\");\r\n                setDate(`${tempDate[0]}-${tempDate[1]}`);\r\n                setActualDate(newDate);\r\n\r\n                if (newDate.getMonth() === todayDate.getMonth() && newDate.getFullYear() === todayDate.getFullYear()) {\r\n                    setAllowRightArrow(false);\r\n                }\r\n            } else {\r\n                const todayDate = new Date();\r\n                let newDate = actualDate;\r\n                newDate.setFullYear(newDate.getFullYear() + 1);\r\n    \r\n                const tempDate = (newDate.toISOString().split('T')[0]).split(\"-\");\r\n                setDate(`${tempDate[0]}`);\r\n                setActualDate(newDate);\r\n\r\n                if (newDate.getFullYear() === todayDate.getFullYear()) {\r\n                    setAllowRightArrow(false);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Graph-Headers\">\r\n                <button className=\"Graph-Title\" onClick={ConsumptionProductionClick}><div className={ConsumptionProductionHeaderStyle ? \"activeCons\" : \"inactiveCons\"}>Consumption & Production</div></button>\r\n                <button className=\"Graph-Title\" onClick={BatteryClick}><div className={BatteryStyle ? \"activeBattery\" : \"inactiveBattery\"}>Battery</div></button>\r\n                <button className=\"Graph-Title\" onClick={RevenueClick}><div className={RevenueStyle ? \"activeRevenue\" : \"inactiveRevenue\"}>Revenue</div></button>\r\n                <div className=\"TimeFrame-Container\">\r\n                    <div className=\"TimePeriodButtons\"><button onClick={DayClick} style={dayStyle ? {backgroundColor: \"#007dff\", color:\"white\"} : {}}>Day</button><button onClick={MonthClick} style={monthStyle ? {backgroundColor: \"#007dff\", color:\"white\"} : {}} id=\"TimeFrame-Button-Middle\">Month</button><button onClick={YearClick} style={yearStyle ? {backgroundColor: \"#007dff\", color:\"white\"} : {}}>Year</button></div>\r\n                    <div className=\"TimeFrame-Time\"><button onClick={HandleBeforeClick} className=\"TimeFrame-Time-Arrow Time-Frame-Time-Arrow-Left\">{\"<\"}</button><button className=\"TimeFrame-Time-TimeDisplay\">{date}</button><button onClick={HandleAfterClick} style={allowRightArrow ? {} : {opacity: 0.5, cursor: \"default\"}} className=\"TimeFrame-Time-Arrow Time-Frame-Time-Arrow-Right\">{\">\"}</button></div>\r\n                </div>\r\n            </div>\r\n            {/* ConsumptionAndProduction Chart */}\r\n            {ConsumptionProductionHeaderStyle ? \r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart width={730} height={250} data={data}>\r\n                    <defs>\r\n                        <linearGradient id={`SolarProductionColor`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#ffd17f' />\r\n                            <stop offset='1' stopColor='#ff8057' />\r\n                        </linearGradient>\r\n                        <linearGradient id={`ConsumptionColor`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#c069e4' />\r\n                            <stop offset='1' stopColor='#6c32fb' />\r\n                        </linearGradient>\r\n                        <linearGradient id={`ImportFromGridColor`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#f46286' />\r\n                            <stop offset='1' stopColor='#ec2871' />\r\n                        </linearGradient>\r\n                        <linearGradient id={`ConsumedFromPV`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#06d3ba' />\r\n                            <stop offset='1' stopColor='#189cd8' />\r\n                        </linearGradient>\r\n                    </defs>\r\n                        <CartesianGrid strokeDasharray=\"0 0\" />\r\n                        <XAxis interval={1} dataKey=\"Name\" stroke={axisColors}/>\r\n                        <YAxis unit={\"kWh\"} scale={\"linear\"} tickFormatter={(value) => value.toFixed(0)} interval={1} stroke={axisColors}/>\r\n                        <Tooltip contentStyle={toolTipStyle} isAnimationActive={true} content={<CustomConsumptionToolTip/>}/>\r\n                        <Legend onClick={(value) => ShowOrHideData(value)} formatter={(value, entry, index) => <span style={LegendStyle(entry)}>{value}</span>}/>\r\n                        <Bar id=\"SolarProd\" dataKey=\"Solar production\" fill={`url(#SolarProductionColor)`} legendType=\"circle\" unit={\"kWh\"} hide={showSolarProd ? false : true}/>\r\n                        <Bar id=\"Consumed\" dataKey=\"Consumption\" fill={`url(#ConsumptionColor)`} legendType=\"circle\" unit={\"kWh\"} hide={showConsumption ? false : true}/>\r\n                        <Bar id=\"Import\" dataKey=\"Import from grid\" fill={`url(#ImportFromGridColor)`} legendType=\"circle\" unit={\"kWh\"} hide={showImportFromGrid ? false : true}/>\r\n                        <Bar id=\"FromPv\" dataKey=\"Consumed from PV\" fill={`url(#ConsumedFromPV)`} legendType=\"circle\" unit={\"kWh\"} hide={showConsumedFromPv ? false : true}/>\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            : <></>}\r\n            {/* BatteryChart */}\r\n            {BatteryStyle ? \r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart width={730} height={250} data={data}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#8ad7b2\" stopOpacity={0.8}/>\r\n                            <stop offset=\"95%\" stopColor=\"#22df83\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"Name\" stroke={axisColors} tickFormatter={(value) => `${value.split(\":\")[0]}:00:00`} interval={50}/>\r\n                        <YAxis stroke={axisColors} unit={\"%\"} />\r\n                        <Tooltip content={<CustomConsumptionToolTip/>}/>\r\n                        <Legend iconType=\"plainline\" />\r\n                        <Area id=\"BatteryPercent\" type={\"monotone\"} dataKey=\"Battery percentage\" stroke=\"#22df83\" fillOpacity={1} unit={\"%\"} legendType=\"circle\" fill=\"url(#colorUv)\"/>\r\n                        {/* hide={showSolarProd ? false : true} */}\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n            : <></>}\r\n            {RevenueStyle ? \r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <BarChart width={730} height={250} data={data}>\r\n                    <defs>\r\n                        <linearGradient id={`FedToGridColor`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#06d3ba' />\r\n                            <stop offset='1' stopColor='#189cd8' />\r\n                        </linearGradient>\r\n                        <linearGradient id={`FirnControllerProfitColor`} x1='0' y1='0' x2='0' y2='100%' spreadMethod='reflect'>\r\n                            <stop offset='0' stopColor='#0e578b' />\r\n                            <stop offset='1' stopColor='#189cd8' />\r\n                        </linearGradient>\r\n                    </defs>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"Name\" stroke={axisColors} interval={1}/>\r\n                        <YAxis unit={\"€\"} stroke={axisColors}/>\r\n                        <Tooltip contentStyle={toolTipStyle} isAnimationActive={true} content={<CustomConsumptionToolTip/>}/>\r\n                        <Legend iconType=\"circle\"/>\r\n                        <Bar id=\"FedToGrid\" stackId={'a'} unit={'€'} dataKey=\"Fed to grid\" fill={`url(#FedToGridColor)`} />\r\n                        <Bar id=\"FirnControllerProfit\" stackId={'a'} unit={'€'} dataKey=\"FirnController Profit\" fill={`url(#FirnControllerProfitColor)`} />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// \r\nexport default Charts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}