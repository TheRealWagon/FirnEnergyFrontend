{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"https://firnenergybackend.onrender.com/api/users/\";\nconst User = () => {\n  const login = async (email, password) => {\n    let data = JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    });\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: `http://localhost:9000/api/users/login`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    try {\n      const response = await axios.post(config.url, data, config);\n      return response; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  const GetUsername = async token => {\n    const axiosInstance = axios.create({\n      baseURL: 'http://localhost:9000/api',\n      // Set your base URL here\n      headers: {\n        'Content-Type': 'application/json'\n        // Add any other default headers you need here\n      }\n    });\n\n    let data = JSON.stringify({});\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: `http://localhost:9000/api/users/info`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZzIxfQ.FnNsk6xbN2C6wqfxpvPwvCBy6dSktvYkZklBgzZFMNc`\n      },\n      data: data\n    };\n    try {\n      const response = await axiosInstance.get('/users/info', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n\n      // console.log(config.headers)\n      // const response = await axios.get(config.url, data, config);\n      // return response; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  const logout = async token => {\n    console.log(\"Logout Attempt\");\n    let data = '';\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'https://authentication.eniris.be/auth/logout',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      data: data\n    };\n    try {\n      const response = await axios.post(config.url, data, config);\n      return response.data; // Return the data after successful response\n    } catch (error) {\n      console.log(error);\n      // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\n    }\n  };\n\n  return {\n    login,\n    logout,\n    GetUsername\n  };\n};\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["axios","baseURL","User","login","email","password","data","JSON","stringify","config","method","maxBodyLength","Infinity","url","headers","response","post","error","console","log","GetUsername","token","axiosInstance","create","Authorization","get","logout","_c","$RefreshReg$"],"sources":["C:/Users/Dirk Verdoodt/Documents/eniris data/react website/firnenergy/src/api/user.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"https://firnenergybackend.onrender.com/api/users/\";\r\n\r\nconst User = () => {\r\n\r\n    const login = async (email, password) => {\r\n\r\n        let data = JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        });\r\n\r\n        let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: `http://localhost:9000/api/users/login`,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(config.url, data, config);\r\n            return response; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    const GetUsername = async (token) => {    \r\n\r\n        const axiosInstance = axios.create({\r\n            baseURL: 'http://localhost:9000/api', // Set your base URL here\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              // Add any other default headers you need here\r\n            },\r\n        });\r\n\r\n\r\n        let data = JSON.stringify({\r\n            \r\n        });\r\n\r\n        let config = {\r\n        method: 'get',\r\n        maxBodyLength: Infinity,\r\n        url: `http://localhost:9000/api/users/info`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZzIxfQ.FnNsk6xbN2C6wqfxpvPwvCBy6dSktvYkZklBgzZFMNc`\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n\r\n            const response = await axiosInstance.get('/users/info', {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            return response.data;\r\n\r\n            // console.log(config.headers)\r\n            // const response = await axios.get(config.url, data, config);\r\n            // return response; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    const logout = async (token) => {    \r\n        console.log(\"Logout Attempt\")\r\n        let data = '';\r\n\r\n        let config = {\r\n        method: 'post',\r\n        maxBodyLength: Infinity,\r\n        url: 'https://authentication.eniris.be/auth/logout',\r\n        headers: { \r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        data : data\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(config.url, data, config);\r\n            return response.data; // Return the data after successful response\r\n        } catch (error) {\r\n            console.log(error);\r\n            // throw error; // Rethrow the error to handle it in HandleLoginEvent if needed\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        login,\r\n        logout,\r\n        GetUsername,\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default User;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mDAAmD;AAEnE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEf,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAErC,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MACtB,OAAO,EAAEJ,KAAK;MACd,UAAU,EAAEC;IAChB,CAAC,CAAC;IAEF,IAAII,MAAM,GAAG;MACbC,MAAM,EAAE,MAAM;MACdC,aAAa,EAAEC,QAAQ;MACvBC,GAAG,EAAG,uCAAsC;MAC5CC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDR,IAAI,EAAGA;IACP,CAAC;IAED,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACP,MAAM,CAACI,GAAG,EAAEP,IAAI,EAAEG,MAAM,CAAC;MAC3D,OAAOM,QAAQ,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAMA,KAAK,CAAC,CAAC;IACjB;EAEJ,CAAC;;EAED,MAAMG,WAAW,GAAG,MAAOC,KAAK,IAAK;IAEjC,MAAMC,aAAa,GAAGtB,KAAK,CAACuB,MAAM,CAAC;MAC/BtB,OAAO,EAAE,2BAA2B;MAAE;MACtCa,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF;IACJ,CAAC,CAAC;;IAGF,IAAIR,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC,CAE1B,CAAC,CAAC;IAEF,IAAIC,MAAM,GAAG;MACbC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEC,QAAQ;MACvBC,GAAG,EAAG,sCAAqC;MAC3CC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCU,aAAa,EAAG;MACpB,CAAC;MACDlB,IAAI,EAAGA;IACP,CAAC;IAED,IAAI;MAEA,MAAMS,QAAQ,GAAG,MAAMO,aAAa,CAACG,GAAG,CAAC,aAAa,EAAE;QACpDX,OAAO,EAAE;UACPU,aAAa,EAAG,UAASH,KAAM;QACjC;MACJ,CAAC,CAAC;MACF,OAAON,QAAQ,CAACT,IAAI;;MAEpB;MACA;MACA;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAMA,KAAK,CAAC,CAAC;IACjB;EAEJ,CAAC;;EAED,MAAMS,MAAM,GAAG,MAAOL,KAAK,IAAK;IAC5BH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,IAAIb,IAAI,GAAG,EAAE;IAEb,IAAIG,MAAM,GAAG;MACbC,MAAM,EAAE,MAAM;MACdC,aAAa,EAAEC,QAAQ;MACvBC,GAAG,EAAE,8CAA8C;MACnDC,OAAO,EAAE;QACL,eAAe,EAAG,UAASO,KAAM;MACrC,CAAC;MACDf,IAAI,EAAGA;IACP,CAAC;IAED,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACP,MAAM,CAACI,GAAG,EAAEP,IAAI,EAAEG,MAAM,CAAC;MAC3D,OAAOM,QAAQ,CAACT,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;IACJ;EAEJ,CAAC;;EAED,OAAO;IACHd,KAAK;IACLuB,MAAM;IACNN;EACJ,CAAC;AAGL,CAAC;AAAAO,EAAA,GAzGKzB,IAAI;AA2GV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}